{"version":3,"sources":["components/Setup.tsx","components/Inbox.tsx","components/UseAsApp.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Setup","props","setDynalistToken","a","setState","prevState","sendingInProgress","apiKey","state","dynalistApiToken","dynalistApi","DynalistApi","listFiles","testResult","_code","localStorage","setItem","history","push","Error","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleChange","event","target","value","handleKeyDown","key","style","top","bottom","width","display","justifyContent","alignItems","flexDirection","height","maxWidth","margin","href","marginLeft","marginRight","rows","cols","this","onChange","onKeyDown","disabled","className","onClick","to","color","Component","Inbox","clearKey","removeItem","sendTextToInbox","console","log","inboxInput","prev","sendToInbox","success","dynalistApiKey","getItem","type","UseAsApp","goBack","marginTop","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bd046262.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { DynalistApi } from 'dynalist-api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { UseAsApp } from './UseAsApp';\r\n\r\nexport class Setup extends Component<any, { dynalistApiToken: string; sendingInProgress: boolean }> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { dynalistApiToken: '', sendingInProgress: false };\r\n  }\r\n\r\n  setDynalistToken = async () => {\r\n    this.setState((prevState) => {\r\n      return { ...prevState, sendingInProgress: true };\r\n    });\r\n    const apiKey = this.state.dynalistApiToken;\r\n    const dynalistApi = new DynalistApi(apiKey, 0);\r\n    try {\r\n      const testResult = (await dynalistApi.listFiles()) as any;\r\n      if (testResult._code && testResult._code === 'Ok') {\r\n        localStorage.setItem('quick-dynalist-api-key', apiKey);\r\n        this.props.history.push('/');\r\n        return;\r\n      }\r\n      if (testResult._code && testResult._code === 'InvalidToken') {\r\n        throw new Error('Invalid token entered');\r\n      }\r\n      throw new Error('Request not accepted');\r\n    } catch (e) {\r\n      toast.error((e as Error).message, {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } finally {\r\n      this.setState((prevState) => {\r\n        return { ...prevState, sendingInProgress: false };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event: any) => {\r\n    this.setState({ dynalistApiToken: event.target.value });\r\n  };\r\n\r\n  handleKeyDown = (event: any) => {\r\n    if (event.key === 'Enter' && this.state.dynalistApiToken) {\r\n      this.setDynalistToken();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: 'absolute', top: '0px', bottom: '0px', width: '100%' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n          }}\r\n        >\r\n          <div style={{ width: '100%', maxWidth: '1000px', margin: '10px' }}>\r\n            <div style={{ margin: '10px' }}>\r\n              <div>\r\n                <h1>Enter Dynalist API Token</h1>\r\n              </div>\r\n              <div>\r\n                <p>\r\n                  This is a tool to quickly add items to your dynalist{' '}\r\n                  <a href='https://help.dynalist.io/article/119-set-an-inbox-location'>inbox</a>. To set this up you\r\n                  will need to add your dynalist api token to the site (this will be saved only to localstorage on your\r\n                  browser). If you (rightly) don't trust this site and would rather host this tool yourself then you can\r\n                  fork the code at <a href='https://github.com/nzmattgrant/QuickDynalist'>github</a> and host it\r\n                  yourself (for free) at <a href='https://pages.github.com/'>github pages</a>\r\n                </p>\r\n                <p>\r\n                  Enter your api token found{' '}\r\n                  <a target='_blank' href='https://dynalist.io/developer'>\r\n                    here\r\n                  </a>\r\n                </p>\r\n                <p>This key will only be held locally on your browser and will not be sent to any server</p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {' '}\r\n              <div>\r\n                <textarea\r\n                  style={{ width: 'calc(100% - 20px)', marginLeft: '10px', marginRight: '10px' }}\r\n                  rows={4}\r\n                  cols={50}\r\n                  value={this.state.dynalistApiToken}\r\n                  onChange={this.handleChange}\r\n                  onKeyDown={this.handleKeyDown}\r\n                />\r\n              </div>\r\n              <button\r\n                style={{ margin: '10px' }}\r\n                disabled={!this.state.dynalistApiToken}\r\n                className='btn btn-primary'\r\n                onClick={this.setDynalistToken}\r\n              >\r\n                Enter\r\n              </button>\r\n              <div style={{ marginLeft: '10px' }}>\r\n                <Link to='/use-as-app'>Use as App</Link>\r\n              </div>\r\n              {this.state.sendingInProgress ? (\r\n                <div style={{ color: 'green', margin: '10px' }}>Setting api key, please wait to be redirected...</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport { DynalistApi } from 'dynalist-api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport class Inbox extends Component<any, { inboxInput: string; sendingInProgress: boolean }> {\r\n  private dynalistApi?: DynalistApi;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { sendingInProgress: false, inboxInput: '' };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dynalistApiKey = localStorage.getItem('quick-dynalist-api-key') as string;\r\n    //check if we have the api token\r\n    //if not redirect to setup\r\n    console.log(dynalistApiKey);\r\n    if (!dynalistApiKey) {\r\n      this.props.history.push('/Setup');\r\n    }\r\n    this.dynalistApi = new DynalistApi(dynalistApiKey, 0);\r\n  }\r\n\r\n  clearKey = () => {\r\n    localStorage.removeItem('quick-dynalist-api-key');\r\n    this.props.history.push('/Setup');\r\n  };\r\n\r\n  sendTextToInbox = async () => {\r\n    try {\r\n      console.log(this.state.inboxInput);\r\n      this.setState((prev) => {\r\n        return { ...prev, sendingInProgress: true };\r\n      });\r\n      await this.dynalistApi?.sendToInbox(this.state.inboxInput);\r\n      toast.success('Sent to inbox', {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      this.setState((prev) => {\r\n        return { ...prev, inboxInput: '' };\r\n      });\r\n    } catch (e) {\r\n      toast.error((e as Error).message, {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } finally {\r\n      this.setState((prev) => {\r\n        return { ...prev, sendingInProgress: false };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event: any) => {\r\n    this.setState((prev) => {\r\n      return { ...prev, inboxInput: event.target.value };\r\n    });\r\n  };\r\n\r\n  handleKeyDown = (event: any) => {\r\n    if (event.key === 'Enter' && !this.state.sendingInProgress && this.state.inboxInput) {\r\n      this.sendTextToInbox();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: 'absolute', top: '0px', bottom: '0px', width: '100%' }}>\r\n        <div>\r\n          <button style={{ margin: '10px' }} className='btn btn-danger' onClick={this.clearKey}>\r\n            Clear dynalist key\r\n          </button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            height: 'calc(100% - 120px)',\r\n          }}\r\n        >\r\n          <div>\r\n            <h1>Add to inbox</h1>\r\n          </div>\r\n          <div style={{ width: '100%', maxWidth: '1000px' }}>\r\n            <input\r\n              style={{ width: 'calc(100% - 110px)', margin: '10px' }}\r\n              type='text'\r\n              value={this.state.inboxInput}\r\n              onChange={this.handleChange}\r\n              onKeyDown={this.handleKeyDown}\r\n            />\r\n            <button\r\n              style={{ width: '70px', margin: '10px' }}\r\n              className='btn btn-primary'\r\n              disabled={this.state.sendingInProgress || !this.state.inboxInput}\r\n              onClick={this.sendTextToInbox}\r\n            >\r\n              Add\r\n            </button>\r\n          </div>\r\n          <div style={{ marginLeft: '10px' }}>\r\n            <Link to='/use-as-app'>Use as App</Link>\r\n          </div>\r\n          {this.state.sendingInProgress ? <div style={{ color: 'green' }}>Sending to inbox...</div> : <></>}\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { ArrowLeft } from 'react-bootstrap-icons';\r\n\r\nexport class UseAsApp extends Component<any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n  }\r\n\r\n  goBack = () => {\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: 'absolute', top: '0px', bottom: '0px', width: '100%' }}>\r\n        <div>\r\n          <ArrowLeft style={{ width: '30px', height: '30px', marginTop: '20px', marginLeft: '10px' }} onClick={this.goBack} />\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            height: 'calc(100% - 100px)',\r\n          }}\r\n        >\r\n          <div style={{ margin: '10px' }}>\r\n            <div>\r\n              <h1>Use Quick Add Dynalist as an app</h1>\r\n            </div>\r\n            <div>\r\n              <h2>iOS</h2>\r\n              <ul>\r\n                <li>Open this website in Safari</li>\r\n                <li>Tap Share (the middle button) in Safari's bottom bar</li>\r\n                <li>Select Add to Home Screen</li>\r\n              </ul>\r\n              <h2>Android</h2>\r\n              <ul>\r\n                <li>Open this website in Chrome</li>\r\n                <li>Tap on the hamburger menu in the upper right-hand corner of the Chrome window</li>\r\n                <li>Select Add to Home Screen</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\nimport {Route, BrowserRouter as Router} from 'react-router-dom'\nimport { Setup } from './components/Setup';\nimport { Inbox } from './components/Inbox';\nimport { UseAsApp } from './components/UseAsApp';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path='/' component={Inbox} />\n        <Route exact path='/setup' component={Setup} />\n        <Route exact path='/use-as-app' component={UseAsApp} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}