{"version":3,"sources":["components/Setup.tsx","components/Inbox.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Setup","props","setDynalistToken","a","setState","prevState","sendingInProgress","apiKey","state","dynalistApiToken","dynalistApi","DynalistApi","listFiles","testResult","_code","localStorage","setItem","history","push","Error","toast","error","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","handleChange","event","target","value","handleKeyDown","key","style","top","bottom","width","display","justifyContent","alignItems","flexDirection","height","maxWidth","margin","href","rows","cols","this","onChange","onKeyDown","disabled","className","onClick","color","Component","Inbox","clearKey","removeItem","sendTextToInbox","console","log","inboxInput","prev","sendToInbox","success","dynalistApiKey","getItem","type","App","basename","process","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1d27d019.chunk.js","sourcesContent":["import { Component } from 'react';\r\nimport { DynalistApi } from 'dynalist-api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport class Setup extends Component<any, { dynalistApiToken: string; sendingInProgress: boolean }> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { dynalistApiToken: '', sendingInProgress: false };\r\n  }\r\n\r\n  setDynalistToken = async () => {\r\n    this.setState((prevState) => {\r\n      return { ...prevState, sendingInProgress: true };\r\n    });\r\n    const apiKey = this.state.dynalistApiToken;\r\n    const dynalistApi = new DynalistApi(apiKey, 0);\r\n    try {\r\n      const testResult = (await dynalistApi.listFiles()) as any;\r\n      if (testResult._code && testResult._code === 'Ok') {\r\n        localStorage.setItem('quick-dynalist-api-key', apiKey);\r\n        this.props.history.push('/');\r\n        return;\r\n      }\r\n      if (testResult._code && testResult._code === 'InvalidToken') {\r\n        throw new Error('Invalid token entered');\r\n      }\r\n      throw new Error('Request not accepted');\r\n    } catch (e) {\r\n      toast.error((e as Error).message, {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } finally {\r\n      this.setState((prevState) => {\r\n        return { ...prevState, sendingInProgress: false };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event: any) => {\r\n    this.setState({ dynalistApiToken: event.target.value });\r\n  };\r\n\r\n  handleKeyDown = (event: any) => {\r\n    if (event.key === 'Enter' && this.state.dynalistApiToken) {\r\n      this.setDynalistToken();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: 'absolute', top: '0px', bottom: '0px', width: '100%' }}>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            height: '100%',\r\n          }}\r\n        >\r\n          <div style={{ width: '100%', maxWidth: '1000px', margin: '10px' }}>\r\n            <div style={{ margin: '10px' }}>\r\n              <div>\r\n                <h1>Enter Dynalist API Token</h1>\r\n              </div>\r\n              <div>\r\n                <p>\r\n                  This is a tool to quickly add items to your dynalist{' '}\r\n                  <a href='https://help.dynalist.io/article/119-set-an-inbox-location'>inbox</a>. To set this up you\r\n                  will need to add your dynalist api token to the site (this will be saved only to localstorage on your\r\n                  browser). If you (rightly) don't trust this site and would rather host this tool yourself then you can\r\n                  fork the code at <a href='https://github.com/nzmattgrant/QuickDynalist'>github</a> and host it\r\n                  yourself (for free) at <a href='https://pages.github.com/'>github pages</a>\r\n                </p>\r\n                <p>\r\n                  Enter your api token found{' '}\r\n                  <a target='_blank' href='https://dynalist.io/developer'>\r\n                    here\r\n                  </a>\r\n                </p>\r\n                <p>This key will only be held locally on your browser and will not be sent to any server</p>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              {' '}\r\n              <div>\r\n                <textarea\r\n                  style={{ width: 'calc(100% - 20px)', margin: '10px' }}\r\n                  rows={4}\r\n                  cols={50}\r\n                  value={this.state.dynalistApiToken}\r\n                  onChange={this.handleChange}\r\n                  onKeyDown={this.handleKeyDown}\r\n                />\r\n              </div>\r\n              <button\r\n                style={{ margin: '10px' }}\r\n                disabled={!this.state.dynalistApiToken}\r\n                className='btn btn-primary'\r\n                onClick={this.setDynalistToken}\r\n              >\r\n                Enter\r\n              </button>\r\n              {this.state.sendingInProgress ? (\r\n                <div style={{ color: 'green' }}>Setting api key, please wait to be redirected...</div>\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { Component } from 'react';\r\nimport { DynalistApi } from 'dynalist-api';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport class Inbox extends Component<any, { inboxInput: string; sendingInProgress: boolean }> {\r\n  private dynalistApi?: DynalistApi;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { sendingInProgress: false, inboxInput: '' };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const dynalistApiKey = localStorage.getItem('quick-dynalist-api-key') as string;\r\n    //check if we have the api token\r\n    //if not redirect to setup\r\n    console.log(dynalistApiKey);\r\n    if (!dynalistApiKey) {\r\n      this.props.history.push('/Setup');\r\n    }\r\n    this.dynalistApi = new DynalistApi(dynalistApiKey, 0);\r\n  }\r\n\r\n  clearKey = () => {\r\n    localStorage.removeItem('quick-dynalist-api-key');\r\n    this.props.history.push('/Setup');\r\n  };\r\n\r\n  sendTextToInbox = async () => {\r\n    try {\r\n      console.log(this.state.inboxInput);\r\n      this.setState((prev) => {\r\n        return { ...prev, sendingInProgress: true };\r\n      });\r\n      await this.dynalistApi?.sendToInbox(this.state.inboxInput);\r\n      toast.success('Sent to inbox', {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n      this.setState((prev) => {\r\n        return { ...prev, inboxInput: '' };\r\n      });\r\n    } catch (e) {\r\n      toast.error((e as Error).message, {\r\n        position: 'bottom-right',\r\n        autoClose: 5000,\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        progress: undefined,\r\n      });\r\n    } finally {\r\n      this.setState((prev) => {\r\n        return { ...prev, sendingInProgress: false };\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChange = (event: any) => {\r\n    this.setState((prev) => {\r\n      return { ...prev, inboxInput: event.target.value };\r\n    });\r\n  };\r\n\r\n  handleKeyDown = (event: any) => {\r\n    if (event.key === 'Enter' && !this.state.sendingInProgress && this.state.inboxInput) {\r\n      this.sendTextToInbox();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ position: 'absolute', top: '0px', bottom: '0px', width: '100%' }}>\r\n        <div>\r\n          <button\r\n            style={{ margin: '10px' }}\r\n            className='btn btn-danger'\r\n            onClick={this.clearKey}\r\n          >\r\n            Clear dynalist key\r\n          </button>\r\n        </div>\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            flexDirection: 'column',\r\n            height: 'calc(100% - 120px)',\r\n          }}\r\n        >\r\n          <div>\r\n            <h1>Add to inbox</h1>\r\n          </div>\r\n          <div style={{width: '100%', maxWidth:'1000px'}}>\r\n            <input\r\n              style={{ width: 'calc(100% - 110px)', margin: '10px' }}\r\n              type='text'\r\n              value={this.state.inboxInput}\r\n              onChange={this.handleChange}\r\n              onKeyDown={this.handleKeyDown}\r\n            />\r\n            <button style={{width: '70px', margin: '10px'}} className='btn btn-primary' disabled={this.state.sendingInProgress || !this.state.inboxInput} onClick={this.sendTextToInbox}>\r\n              Add\r\n            </button>\r\n          </div>\r\n          { this.state.sendingInProgress ? <div style={{color: 'green'}}>Sending to inbox...</div> : <></> }\r\n        </div>\r\n        <ToastContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import './App.css';\nimport {Route, BrowserRouter as Router} from 'react-router-dom'\nimport { Setup } from './components/Setup';\nimport { Inbox } from './components/Inbox';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path='/' component={Inbox} />\n        <Route exact path='/setup' component={Setup} />\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}